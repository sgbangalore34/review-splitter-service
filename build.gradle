plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id "io.freefair.lombok" version "8.13.1"
}

group = 'com.zuzu.sg.review'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('awsJavaSdkVersion', '2.27.21')
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation platform("software.amazon.awssdk:bom:${awsJavaSdkVersion}")
	implementation 'software.amazon.awssdk:s3'
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.723'
	implementation 'io.awspring.cloud:spring-cloud-aws-starter-sqs:3.4.0'
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.787'
	implementation 'org.projectlombok:lombok'
	implementation 'com.amazonaws:aws-lambda-java-core:1.2.2'
	implementation 'com.amazonaws:aws-lambda-java-events:3.11.1'
	implementation 'com.amazonaws.serverless:aws-serverless-java-container-core:2.1.4'
	runtimeOnly 'com.amazonaws:aws-lambda-java-log4j2:1.5.1'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.batch:spring-batch-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
jar {
	manifest {
		attributes 'Main-Class': 'com.zuzu.sg.review.splitter.S3JsonlSplitterApplication'
	}
	from {
		configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
	}
}